 # importing The Libraries

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Importing the Datasets

df = pd.read_csv('data.csv')

Note : to visualising the model we are only keeping two columns only.but its is not the methotd,we can keep how much ever column is there

X = df.iloc[:,[3,4]

# Using elbow method to find the optimal number of clusters

from sklearn.cluster import KMeans
wcss = []
for i in range(1,11):
    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)
    kmeans.fit(X)
    wcss.append(kmeans.inertia_)

plt.plot(range(1,11),wcss)
plt.title('Elbow method')
plt.xlabel('Number of Clusters')
plt.ylabel('wcss')
plt.show()
	
# Training the K-mean model on the datasets

kmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 	42)
    y_kmeans = kmeans.fit_predict(X)

print(y_kmeans)


# Visualising the clusters

plt.scatter(X[y_kmeans==0,0],X[y_kmeans==0,1],s=100,c='red',label='cluster 1')

plt.scatter(X[y_kmeans==1,0],X[y_kmeans==1,1],s=100,c='blue',label='cluster 2')

plt.scatter(X[y_kmeans==2,0],X[y_kmeans==2,1],s=100,c='green',label='cluster 3')

plt.scatter(X[y_kmeans==3,0],X[y_kmeans==3,1],s=100,c='black',label='cluster 4')

plt.scatter(X[y_kmeans==4,0],X[y_kmeans==4,1],s=100,c='pink',label='cluster 5')

plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=300,c='yellow' , label = 'Centroids')

plt.title('Clusters of Customers')

plt.xlabels('Annual Income (K$)')

plt.ylabels('Spending Score(1-100)')

plt.lenged()

plt.show()

